pipeline {
    agent any
    environment {
        ECR_REPO = env.ECR_URL  
        AWS_REGION = 'us-west-2'
        DOCKER_BUILDKIT = '1'
    }
    stages {
        stage('Debug Environment') {  
            steps {
                sh 'printenv | sort'  
                
                sh 'echo "ECR_URL: $ECR_URL"'
            }
        }
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                dir('app') {
                    script {
                        
                        sh "docker build -t ${env.ECR_URL}:${env.BUILD_NUMBER} --pull ."
                    }
                }
            }
        }
        stage('Push') {
            steps {
                script {
                    sh """
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${env.ECR_URL}
                        docker push ${env.ECR_URL}:${env.BUILD_NUMBER}
                        docker push ${env.ECR_URL}:latest
                    """
                }
            }
        }
        stage('Update Deployment') {
            steps {
                script {
                    sh """
                        aws ssm put-parameter \
                        --region ${AWS_REGION} \
                        --name "/ml-inference/latest-image" \
                        --value "${env.ECR_URL}:${env.BUILD_NUMBER}" \
                        --type String \
                        --overwrite
                    """
                }
            }
        }
    }
    post {
        always {
            sh """
                docker rmi ${env.ECR_URL}:${env.BUILD_NUMBER} || true
                docker rmi ${env.ECR_URL}:latest || true
            """
        }
    }
}
